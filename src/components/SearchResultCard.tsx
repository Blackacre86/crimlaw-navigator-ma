import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { Collapsible, CollapsibleContent, CollapsibleTrigger } from '@/components/ui/collapsible';
import { ChevronDown, ChevronUp, Scale, FileText, Clock, ExternalLink } from 'lucide-react';

// Empowering officers with AI-driven legal insights for faster, fairer justice
export interface SearchResult {
  content: string;
  metadata: {
    title?: string;
    citations?: string[];
    source_type?: string;
    document_id?: string;
    page_number?: number;
  };
  similarity?: number;
  summary?: string;
}

interface SearchResultCardProps {
  result: SearchResult;
  index: number;
}

export function SearchResultCard({ result, index }: SearchResultCardProps) {
  const [isExpanded, setIsExpanded] = useState(false);
  
  const title = result.metadata?.title || `Legal Document ${index + 1}`;
  const sourceType = result.metadata?.source_type || 'Document';
  const citations = result.metadata?.citations || [];
  const relevanceScore = result.similarity ? Math.round(result.similarity * 100) : 0;
  
  // Generate AI summary (mock for now - would be generated by backend)
  const aiSummary = result.summary || generateMockSummary(result.content);
  
  return (
    <Card className="hover:shadow-md transition-shadow border-l-4 border-l-primary/30 hover:border-l-primary">
      <CardHeader className="pb-4">
        <div className="flex items-start justify-between gap-4">
          <div className="flex-1 min-w-0">
            <CardTitle className="text-lg font-semibold text-foreground mb-2 flex items-center gap-2">
              <Scale className="h-5 w-5 text-primary flex-shrink-0" />
              <span className="truncate">{title}</span>
            </CardTitle>
            <div className="flex flex-wrap items-center gap-2 mb-3">
              <Badge variant="secondary" className="text-xs">
                {sourceType}
              </Badge>
              {relevanceScore > 0 && (
                <Badge variant="outline" className="text-xs">
                  {relevanceScore}% relevant
                </Badge>
              )}
              {result.metadata?.page_number && (
                <Badge variant="outline" className="text-xs">
                  Page {result.metadata.page_number}
                </Badge>
              )}
            </div>
          </div>
        </div>
        
        {/* AI Summary */}
        <div className="bg-gradient-to-r from-primary/5 to-accent-blue/5 rounded-lg p-4 border border-primary/10">
          <div className="flex items-start gap-2 mb-2">
            <div className="w-2 h-2 rounded-full bg-primary mt-2 flex-shrink-0"></div>
            <div className="flex-1">
              <h4 className="font-medium text-sm text-foreground mb-1">AI Summary</h4>
              <p className="text-sm text-muted-foreground leading-relaxed">{aiSummary}</p>
            </div>
          </div>
        </div>
      </CardHeader>

      <CardContent className="pt-0">
        {/* Citations */}
        {citations.length > 0 && (
          <div className="mb-4">
            <h5 className="font-medium text-sm text-foreground mb-2 flex items-center gap-1">
              <FileText className="h-4 w-4" />
              Citations
            </h5>
            <div className="flex flex-wrap gap-1">
              {citations.slice(0, 3).map((citation, idx) => (
                <Badge key={idx} variant="outline" className="text-xs">
                  {citation}
                </Badge>
              ))}
              {citations.length > 3 && (
                <Badge variant="outline" className="text-xs">
                  +{citations.length - 3} more
                </Badge>
              )}
            </div>
          </div>
        )}

        {/* Expandable Content */}
        <Collapsible open={isExpanded} onOpenChange={setIsExpanded}>
          <CollapsibleTrigger asChild>
            <Button variant="ghost" size="sm" className="w-full justify-between h-8 px-2">
              <span className="text-sm">
                {isExpanded ? 'Hide full text' : 'Show full text'}
              </span>
              {isExpanded ? (
                <ChevronUp className="h-4 w-4" />
              ) : (
                <ChevronDown className="h-4 w-4" />
              )}
            </Button>
          </CollapsibleTrigger>
          
          <CollapsibleContent className="mt-3">
            <div className="bg-muted/30 rounded-lg p-4 border">
              <p className="text-sm text-foreground leading-relaxed whitespace-pre-wrap">
                {result.content.length > 500 
                  ? `${result.content.substring(0, 500)}...`
                  : result.content
                }
              </p>
              
              {result.content.length > 500 && (
                <Button variant="link" size="sm" className="mt-2 p-0 h-auto text-primary">
                  <ExternalLink className="h-3 w-3 mr-1" />
                  View complete document
                </Button>
              )}
            </div>
          </CollapsibleContent>
        </Collapsible>

        {/* Legal Disclaimer */}
        <div className="mt-4 pt-3 border-t border-border">
          <p className="text-xs text-muted-foreground italic">
            This is not legal advice. Always consult official sources and a qualified attorney.
          </p>
        </div>
      </CardContent>
    </Card>
  );
}

// Helper function to generate mock AI summaries
function generateMockSummary(content: string): string {
  const summaries = [
    "This section outlines the legal requirements and procedures for criminal proceedings in Massachusetts.",
    "Key provisions regarding sentencing guidelines and penalty structures for criminal offenses.",
    "Important precedent establishing standards for evidence admissibility in criminal cases.",
    "Statutory requirements for police procedures during arrests and investigations.",
    "Constitutional protections and their application in Massachusetts criminal law."
  ];
  
  return summaries[Math.floor(Math.random() * summaries.length)];
}